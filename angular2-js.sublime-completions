{
  "scope": "source.js",

  "completions":
  [
    // Annotations
    { "trigger": "selector", "contents": "selector: '$1'" },
    { "trigger": "inputs", "contents": "inputs: [\n  '$1'\n]" },
    { "trigger": "outputs", "contents": "outputs: [\n  '$1'\n]" },
    { "trigger": "providers", "contents": "providers: [\n  $1\n]" },
    { "trigger": "viewProviders", "contents": "viewProviders: [\n  $1\n]" },
    { "trigger": "template", "contents": "template: `\n$1\n`" },
    { "trigger": "templateUrl", "contents": "templateUrl: '$1'" },
    { "trigger": "styles", "contents": "styles: `\n$1\n`" },
    { "trigger": "styleUrls", "contents": "styleUrls: [\n  '$1'\n]" },
    { "trigger": "directives", "contents": "directives: [\n  $1\n]" },
    { "trigger": "pipes", "contents": "pipes: [\n  $1\n]" },
    { "trigger": "properties", "contents": "properties: [\n  '$1'\n]" },
    { "trigger": "host", "contents": "host: {\n  '$1': '$2'\n}" },

    // Decorators
    { "trigger": "@Inject", "contents": "@Inject($1) $2" },
    { "trigger": "@Input", "contents": "@Input($1) $2" },
    { "trigger": "@Output", "contents": "@Output($1) $2 = $3" },
    { "trigger": "@HostBinding", "contents": "@HostBinding($1) $2" },
    { "trigger": "@HostListener", "contents": "@HostListener('$1', ['$2'])" },
    { "trigger": "@ContentChild", "contents": "@ContentChild($1)" },
    { "trigger": "@ContentChildren", "contents": "@ContentChildren($1)" },
    { "trigger": "@ViewChild", "contents": "@ViewChild($1)" },
    { "trigger": "@ViewChildren", "contents": "@ViewChildren($1)" },

    // Lifecycle
    { "trigger": "constructor", "contents": "constructor($1) {\n  $2\n}" },
    { "trigger": "ngOnChanges", "contents": "ngOnChanges($1) {\n  $2\n}" },
    { "trigger": "ngOnInit", "contents": "ngOnInit($1) {\n  $2\n}" },
    { "trigger": "ngDoCheck", "contents": "ngDoCheck($1) {\n  $2\n}" },
    { "trigger": "ngAfterContentInit", "contents": "ngAfterContentInit($1) {\n  $2\n}" },
    { "trigger": "ngAfterContentChecked", "contents": "ngAfterContentChecked($1) {\n  $2\n}" },
    { "trigger": "ngAfterViewInit", "contents": "ngAfterViewInit($1) {\n  $2\n}" },
    { "trigger": "ngAfterViewChecked", "contents": "ngAfterViewChecked($1) {\n  $2\n}" },
    { "trigger": "ngOnDestroy", "contents": "ngOnDestroy($1) {\n  $2\n}" },

    // Routing
    { "trigger": "@CanActivate", "contents": "@CanActivate($1)" },
    { "trigger": "routerOnActivate", "contents": "routerOnActivate($1) {\n  $2\n}" },
    { "trigger": "routerCanReuse", "contents": "routerCanReuse($1) {\n  $2\n}" },
    { "trigger": "routerOnReuse", "contents": "routerOnReuse($1) {\n  $2\n}" },
    { "trigger": "routerCanDeactivate", "contents": "routerCanDeactivate($1) {\n  $2\n}" },
    { "trigger": "routerOnDeactivate", "contents": "routerOnDeactivate($1) {\n  $2\n}" }
  ]
}
